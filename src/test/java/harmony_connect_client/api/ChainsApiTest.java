/*
 * Harmony Connect
 * An easy to use API that helps you access the Factom blockchain.
 *
 * OpenAPI spec version: 1.0.17
 * Contact: harmony-support@factom.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package harmony_connect_client.api;

import harmony_connect_client.ApiException;
import harmony_connect_client.model.Chain;
import harmony_connect_client.model.ChainCreate;
import harmony_connect_client.model.ChainList;
import harmony_connect_client.model.ChainShort;
import harmony_connect_client.model.SearchBody;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChainsApi
 */
@Ignore
public class ChainsApiTest {

    private final ChainsApi api = new ChainsApi();

    
    /**
     * Get Chain Info
     *
     * Get information about a specific chain on Connect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChainByIDTest() throws ApiException {
        String chainId = null;
        Chain response = api.getChainByID(chainId);

        // TODO: test validations
    }
    
    /**
     * Get All Chains
     *
     * Returns all of the chains on factomd.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChainsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String stages = null;
        ChainList response = api.getChains(limit, offset, stages);

        // TODO: test validations
    }
    
    /**
     * Create a Chain
     *
     * Create a new chain. Each chain functions as a mini-blockchain such that all of the entries are linked. Every entry relies on data from previous entries in the chain. Any unauthorized alterations to any of these entries can be detected. Be aware that data entered into the &#x60;content&#x60; and &#x60;external_ids&#x60; fields must be in Base64 format. Sending this request will cause Connect to create the first entry of the chain. The data entered into the &#x60;content&#x60; and &#x60;external_id&#x60; fields will be applied to this entry.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postChainTest() throws ApiException {
        ChainCreate chainCreate = null;
        ChainShort response = api.postChain(chainCreate);

        // TODO: test validations
    }
    
    /**
     * Search Chains
     *
     * Finds all of the chains with &#x60;external_ids&#x60; that match what you&#39;ve entered. External IDs must be sent in Base64 format.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postChainSearchTest() throws ApiException {
        SearchBody searchBody = null;
        Integer limit = null;
        Integer offset = null;
        ChainList response = api.postChainSearch(searchBody, limit, offset);

        // TODO: test validations
    }
    
}

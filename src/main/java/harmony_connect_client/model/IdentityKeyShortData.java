/*
 * Harmony Connect
 * An easy to use API that helps you access the Factom blockchain.
 *
 * OpenAPI spec version: 1.0.19
 * Contact: harmony-support@factom.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package harmony_connect_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * IdentityKeyShortData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-07-03T22:54:40.268681300Z[UTC]")
public class IdentityKeyShortData {
  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_ACTIVATED_HEIGHT = "activated_height";
  @SerializedName(SERIALIZED_NAME_ACTIVATED_HEIGHT)
  private Integer activatedHeight;

  public static final String SERIALIZED_NAME_RETIRED_HEIGHT = "retired_height";
  @SerializedName(SERIALIZED_NAME_RETIRED_HEIGHT)
  private Integer retiredHeight;

  public IdentityKeyShortData key(String key) {
    this.key = key;
    return this;
  }

   /**
   * The public key.
   * @return key
  **/
  @ApiModelProperty(required = true, value = "The public key.")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public IdentityKeyShortData activatedHeight(Integer activatedHeight) {
    this.activatedHeight = activatedHeight;
    return this;
  }

   /**
   * The height at which this key became valid. &#x60;null&#x60; if this is the first key.
   * @return activatedHeight
  **/
  @ApiModelProperty(value = "The height at which this key became valid. `null` if this is the first key.")
  public Integer getActivatedHeight() {
    return activatedHeight;
  }

  public void setActivatedHeight(Integer activatedHeight) {
    this.activatedHeight = activatedHeight;
  }

  public IdentityKeyShortData retiredHeight(Integer retiredHeight) {
    this.retiredHeight = retiredHeight;
    return this;
  }

   /**
   * The expiration height of this key. &#x60;null&#x60; if this is the current key.
   * @return retiredHeight
  **/
  @ApiModelProperty(value = "The expiration height of this key. `null` if this is the current key.")
  public Integer getRetiredHeight() {
    return retiredHeight;
  }

  public void setRetiredHeight(Integer retiredHeight) {
    this.retiredHeight = retiredHeight;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityKeyShortData identityKeyShortData = (IdentityKeyShortData) o;
    return Objects.equals(this.key, identityKeyShortData.key) &&
        Objects.equals(this.activatedHeight, identityKeyShortData.activatedHeight) &&
        Objects.equals(this.retiredHeight, identityKeyShortData.retiredHeight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, activatedHeight, retiredHeight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityKeyShortData {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    activatedHeight: ").append(toIndentedString(activatedHeight)).append("\n");
    sb.append("    retiredHeight: ").append(toIndentedString(retiredHeight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


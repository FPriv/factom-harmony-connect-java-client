/*
 * Harmony Connect
 * An easy to use API that helps you access the Factom blockchain.
 *
 * OpenAPI spec version: 1.0.19
 * Contact: harmony-support@factom.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package harmony_connect_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import harmony_connect_client.model.ECBlockShort;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CommitLong
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-07-03T22:54:40.268681300Z[UTC]")
public class CommitLong {
  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private String hash;

  public static final String SERIALIZED_NAME_TX_ID = "tx_id";
  @SerializedName(SERIALIZED_NAME_TX_ID)
  private String txId;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CHAIN_ID = "chain_id";
  @SerializedName(SERIALIZED_NAME_CHAIN_ID)
  private String chainId;

  public static final String SERIALIZED_NAME_WELD = "weld";
  @SerializedName(SERIALIZED_NAME_WELD)
  private String weld;

  public static final String SERIALIZED_NAME_ENTRY_HASH = "entry_hash";
  @SerializedName(SERIALIZED_NAME_ENTRY_HASH)
  private String entryHash;

  public static final String SERIALIZED_NAME_ENTRY_CREDITS = "entry_credits";
  @SerializedName(SERIALIZED_NAME_ENTRY_CREDITS)
  private Integer entryCredits;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private String signature;

  public static final String SERIALIZED_NAME_EC_BLOCK = "ec_block";
  @SerializedName(SERIALIZED_NAME_EC_BLOCK)
  private ECBlockShort ecBlock = null;

  public CommitLong hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * The SHA256 Hash of this commit.
   * @return hash
  **/
  @ApiModelProperty(required = true, value = "The SHA256 Hash of this commit.")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public CommitLong txId(String txId) {
    this.txId = txId;
    return this;
  }

   /**
   * The entry credit transaction ID that resulted in this commit.
   * @return txId
  **/
  @ApiModelProperty(required = true, value = "The entry credit transaction ID that resulted in this commit.")
  public String getTxId() {
    return txId;
  }

  public void setTxId(String txId) {
    this.txId = txId;
  }

  public CommitLong version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * The type version of this transaction.
   * @return version
  **/
  @ApiModelProperty(required = true, value = "The type version of this transaction.")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public CommitLong createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The timestamp for when this commit was created. Sent in [ISO 8601 Format](https://en.wikipedia.org/wiki/ISO_8601). For example: &#x60;YYYY-MM-DDThh:mm:ssZ&#x60;
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "The timestamp for when this commit was created. Sent in [ISO 8601 Format](https://en.wikipedia.org/wiki/ISO_8601). For example: `YYYY-MM-DDThh:mm:ssZ`")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CommitLong chainId(String chainId) {
    this.chainId = chainId;
    return this;
  }

   /**
   * The ID of the chain that was altered by this commit.
   * @return chainId
  **/
  @ApiModelProperty(required = true, value = "The ID of the chain that was altered by this commit.")
  public String getChainId() {
    return chainId;
  }

  public void setChainId(String chainId) {
    this.chainId = chainId;
  }

  public CommitLong weld(String weld) {
    this.weld = weld;
    return this;
  }

   /**
   * The commit weld for this commit. This is the double hash (SHA256d) of the Entry Hash concatenated with the ChainID.
   * @return weld
  **/
  @ApiModelProperty(required = true, value = "The commit weld for this commit. This is the double hash (SHA256d) of the Entry Hash concatenated with the ChainID.")
  public String getWeld() {
    return weld;
  }

  public void setWeld(String weld) {
    this.weld = weld;
  }

  public CommitLong entryHash(String entryHash) {
    this.entryHash = entryHash;
    return this;
  }

   /**
   * The unique identifier of the entry that was created by this commit.
   * @return entryHash
  **/
  @ApiModelProperty(required = true, value = "The unique identifier of the entry that was created by this commit.")
  public String getEntryHash() {
    return entryHash;
  }

  public void setEntryHash(String entryHash) {
    this.entryHash = entryHash;
  }

  public CommitLong entryCredits(Integer entryCredits) {
    this.entryCredits = entryCredits;
    return this;
  }

   /**
   * The number of entry credits spent on this commit.
   * @return entryCredits
  **/
  @ApiModelProperty(required = true, value = "The number of entry credits spent on this commit.")
  public Integer getEntryCredits() {
    return entryCredits;
  }

  public void setEntryCredits(Integer entryCredits) {
    this.entryCredits = entryCredits;
  }

  public CommitLong address(String address) {
    this.address = address;
    return this;
  }

   /**
   * The entry credit address that initiated this transaction.
   * @return address
  **/
  @ApiModelProperty(required = true, value = "The entry credit address that initiated this transaction.")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public CommitLong signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * The signature that authorized this commit.
   * @return signature
  **/
  @ApiModelProperty(required = true, value = "The signature that authorized this commit.")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }

  public CommitLong ecBlock(ECBlockShort ecBlock) {
    this.ecBlock = ecBlock;
    return this;
  }

   /**
   * Get ecBlock
   * @return ecBlock
  **/
  @ApiModelProperty(value = "")
  public ECBlockShort getEcBlock() {
    return ecBlock;
  }

  public void setEcBlock(ECBlockShort ecBlock) {
    this.ecBlock = ecBlock;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommitLong commitLong = (CommitLong) o;
    return Objects.equals(this.hash, commitLong.hash) &&
        Objects.equals(this.txId, commitLong.txId) &&
        Objects.equals(this.version, commitLong.version) &&
        Objects.equals(this.createdAt, commitLong.createdAt) &&
        Objects.equals(this.chainId, commitLong.chainId) &&
        Objects.equals(this.weld, commitLong.weld) &&
        Objects.equals(this.entryHash, commitLong.entryHash) &&
        Objects.equals(this.entryCredits, commitLong.entryCredits) &&
        Objects.equals(this.address, commitLong.address) &&
        Objects.equals(this.signature, commitLong.signature) &&
        Objects.equals(this.ecBlock, commitLong.ecBlock);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hash, txId, version, createdAt, chainId, weld, entryHash, entryCredits, address, signature, ecBlock);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommitLong {\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    chainId: ").append(toIndentedString(chainId)).append("\n");
    sb.append("    weld: ").append(toIndentedString(weld)).append("\n");
    sb.append("    entryHash: ").append(toIndentedString(entryHash)).append("\n");
    sb.append("    entryCredits: ").append(toIndentedString(entryCredits)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    ecBlock: ").append(toIndentedString(ecBlock)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

